<?xml version="1.0" encoding="UTF-8"?>
<document>
 <LimeSurveyDocType>Group</LimeSurveyDocType>
 <DBVersion>366</DBVersion>
 <languages>
  <language>de</language>
 </languages>
 <groups>
  <fields>
   <fieldname>gid</fieldname>
   <fieldname>sid</fieldname>
   <fieldname>group_name</fieldname>
   <fieldname>group_order</fieldname>
   <fieldname>description</fieldname>
   <fieldname>language</fieldname>
   <fieldname>randomization_group</fieldname>
   <fieldname>grelevance</fieldname>
  </fields>
  <rows>
   <row>
    <gid><![CDATA[1911]]></gid>
    <sid><![CDATA[361194]]></sid>
    <group_name><![CDATA[Würfelspiel]]></group_name>
    <group_order><![CDATA[9]]></group_order>
    <description/>
    <language><![CDATA[de]]></language>
    <randomization_group/>
    <grelevance/>
   </row>
  </rows>
 </groups>
 <questions>
  <fields>
   <fieldname>qid</fieldname>
   <fieldname>parent_qid</fieldname>
   <fieldname>sid</fieldname>
   <fieldname>gid</fieldname>
   <fieldname>type</fieldname>
   <fieldname>title</fieldname>
   <fieldname>question</fieldname>
   <fieldname>preg</fieldname>
   <fieldname>help</fieldname>
   <fieldname>other</fieldname>
   <fieldname>mandatory</fieldname>
   <fieldname>question_order</fieldname>
   <fieldname>language</fieldname>
   <fieldname>scale_id</fieldname>
   <fieldname>same_default</fieldname>
   <fieldname>relevance</fieldname>
   <fieldname>modulename</fieldname>
  </fields>
  <rows>
   <row>
    <qid><![CDATA[30046]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[X]]></type>
    <title><![CDATA[Spielstart]]></title>
    <question><![CDATA[<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script><script>
var RundenID = 0;
var MaxRunden = sessionStorage.getItem('Rundenanzahl');

var ErgebnisArray = JSON.parse(sessionStorage.getItem('RundenergebnisArray').trim());
var gewolltesErgebnis = 0;
// Falls randomisiertes Ergebnis erwünscht ist. (Zusätzlich in Zeile 65)
// var gewolltesErgebnis = Math.floor(Math.random() * 6) + 1;

var gewolltesErgebnisFuerPath = JSON.parse(gewolltesErgebnis);
var VideoPath = "\\upload\\surveys\\"+'{SID}'+"\\files\\Ergebnis_" + gewolltesErgebnisFuerPath + ".mp4";
var TitleElement = document.querySelector(".group-title");
  TitleElement.innerText = "Runde " + RundenID.toString(10) + " von " + MaxRunden.toString(10);

  
//Sobald die Seite geladen wurde soll die erste Runde gestartet werden
$(document).ready(function() {
  StartNextRound();
})
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//Aktualisiert den Titel "Runde Y von X" damit die richtige Zahl angezeigt wird
function ChangeTitle()
  {
            TitleElement.innerText = "Runde " + RundenID.toString(10) + " von " + MaxRunden.toString(10);
  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  //Gibt das Ergebnis der aktuellen Runde weiter
function GetResult()
  {
    return gewolltesErgebnis;
  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  //Gibt den File-Location für das Video mit der richtigen Würfelzahl zurück
  function GetVideoPath()
  {
    return VideoPath;
  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  //Leitet die nächste Runde ein
function StartNextRound()
  {
	
    RundenID = RundenID + 1;
	
    //Wenn MaxRunden gespielt wurden, soll zur nächsten Fragegruppe geleitet werden
    if(RundenID > MaxRunden)
     {

      	GoToNextQuestion();
      
     }
    else //Ansonsten wird eine neue Runde gestartet
    {
    	ResetSessionStorageRoundVariables();
    	reEnableAllButtons();
      	ChangeTitle();
        ChangeVideoToDice();
    }

    ErgebnisArray = JSON.parse(sessionStorage.getItem('RundenergebnisArray').trim()); //redundant aber sicherheitshalber nochmal
	gewolltesErgebnis = ErgebnisArray[RundenID - 1];
	//gewolltesErgebnis = Math.floor(Math.random() * 6) + 1;

    gewolltesErgebnisFuerPath = JSON.parse(gewolltesErgebnis);
    VideoPath = "\\upload\\surveys\\"+'{SID}'+"\\files\\Ergebnis_"+gewolltesErgebnisFuerPath+".mp4";
  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  //
  //Setzt Rundenrelevante temporäre Variablen zurück auf "null"
  function ResetSessionStorageRoundVariables()
  {
    		sessionStorage.setItem('last_button', null);
          	sessionStorage.setItem('bet', null);
       		sessionStorage.setItem('chosenNumbers', null);
  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  //
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //

</script>]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[1]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30047]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[X]]></type>
    <title><![CDATA[Spiel]]></title>
    <question><![CDATA[<style type="text/css">/* Es gibt 2 Style Divisionen im Script. Diese ist hauptsächlich für die Anzeige und inklusion der Würfel. Die Untere ist auschließlich für Würfel. */
  
  *{
    box-sizing: border-box;
  }
  /*
   *  Die Oberbox für Würfel und Anzeige*/
  .everything{
    display: flex;
    flex-direction: column;
  height: fit-content;
  }
    /*
     * In "Anzeige" befindet sich das Video, die Kontostand-/Gewinn-Anzeige und das Diagramm. */
  .Anzeige{
  display: flex;
  width: 100%;
  height: fit-content;
  overflow: visible;
}
    /*
     *  Output beinhaltet den Kontostand und Gewinn/Verlust */
.output{
  flex: 1;
  margin-right: 2%;
  margin-left:2%;
  display:flex;
  flex-direction:column;
  height: auto%;
  width: 50%;
  justify-content: space-around;
}
  /* 
   * Konto beinhaltet Output(Kontostand/Gewinn) und das Diagramm */
.konto{
  display:flex;
  flex: 1;
  flex-direction: row;
  justify-content: space-between;
  border: 1px solid #808080;
  text-align-last: center;
  padding: 2%;
  border-radius: 5px;
  height:auto;
  width:67%;
}
  /*
   *  Die Kontostandanzeige hat diese ID*/
#kontostandneu{
  line-height: auto;
  background-color: black;
  font-size: 1.25vw;
  color: lawngreen;
  font-weight: bold;
  text-align: center;
  content: center;
  border-radius: 5px;
  overflow: visible;
  margin-bottom: 2%;
  padding:2%;
  margin-left:10%;
  margin-right:10%;
}
  /* 
   * Die Gewinn/Verlust Anzeige hat diese ID*/
#BalanceAddition{
    line-height: auto;
    background-color: black;
    font-size: 1.25vw;
    font-weight: bold;
    text-align: center;
    border-radius: 5px;
    overflow: visible;
    margin-bottom: 2%;
    padding:2%;
  	margin-left:10%;
  	margin-right:10%;
}
    /*
     * ChartDivision beinhaltet das Diagramm */
  .chartDivision{
    width:50%;
    height: 100%;
  }
    /* 
     * Chart ist in 7 Spalten aufgeteilt */
.chart
  {
display:flex;
    flex-direction:row;
    height:100%;
    
     justify-content: space-between;
  }
  /*
   * Beinhaltet Video */
.video{
  width:33%;
  margin-right: 2%;
  border: 1px solid #808080;
  padding: 2%;
  border-radius: 5px;
  max-width: 33%;
}
    /* 
     * Der Linkeste Balken, der visuell nicht sichtbar ist, sondern für die Aspect Ratio da ist*/
  .chartPaddingL{
    width: 14%;
    background-color: white;
  }
   /* 
     * Der Rechteste Balken, der visuell nicht sichtbar ist, sondern für die Aspect Ratio da ist*/
   .chartPaddingR{
    min-width: 16%;
     width: auto;
   	background-color: white;
  }
    /*
     * Der Rechte Balken, der nur Schwarz ist */
  .column1{
    width: 14%;
    height:100%;
    background-color: black;
  }
    /*
     * Die Spalte, die einen poitiven Kontostand repräsentiert */
  .column2{
    display:flex;
    flex-direction:column;
    width: 14%;
    height:100%;
    background-color: black;
  }
     /*
     * Der mittlere Balken, der nur Schwarz ist */
  .column3{
    background-color: black;
    width: 14%;
    height:100%;
  }
  	/*
     * Die Spalte, die einen negativen Kontostand repräsentiert */
    .column4{
      background-color: black;
    display:flex;
    flex-direction:column;
    width: 14%;
    height:100%;
  }
     /*
     * Der Linke Balken, der nur Schwarz ist */
  .column5{
    background-color: black;
    width: 14%;
    height:100%;
  }
    /* 
     * Division mit einzelnen Divisionen, welche gefüllt werden um einen positiven Kontostand anzuzeigen */
    .positiveChart{
    display:flex;
    flex-direction:column;
    width: 100%;
    height: 76%;
  }
  	/* 
     * Division mit einzelnen Divisionen, welche gefüllt werden um einen negativen Kontostand anzuzeigen */
    .negativeChart{
    display:flex;
    flex-direction:column;
    width: 100%;
    height: 76%;
  }
    /*
     * Das "Plus" Bild für das Balkendiagramm ist hier drin */
  .positiveChartLabel{
    display: flex;
     justify-content: center;
    width: 100%;
    height: 16%;
    margin-top:25%;
    margin-bottom: 25%;
  }
  	/*
     * Das "Minus" Bild für das Balkendiagramm ist hier drin */
  .negativeChartLabel{
        display: flex;
     justify-content: center;
    width: 100%;
    height: 16%;
    margin-top:25%;
    margin-bottom: 25%;
  }
  /*
   * Text über der Konto/Gewinn Anzeige */
  .KontoLabel
  {
    
      max-width: 100%;
    height:100%;
      width:auto;
  }
  /* 
   * Text in der Konto/Gewinn Anzeige */
  .KontoStandText{
    margin-bottom: 0px;
    font-size: 1vw;
    white-space: nowrap;
    text-align: justify;
    
  }
  /* 
   * Spezifische Änderungen für eine Mobile ansicht*/
  @media only screen and (max-width: 600px) {
    .konto{
      padding: 1%;
      width: 100%;
    }
    .Anzeige{
      display: flex;
      flex-direction: column-reverse;
      align-items: center;
      flex-wrap: nowrap;
    }
    .chart{
      height: 12vh;
    }
    .video {
      height: 12vh;
      width: 100%;
      padding: 1%;
      max-width: none;
    }
    #kontostandneu{
      font-size: 4vw;
    }
    #BalanceAddition{
      font-size: 4vw;
    }
    .KontoStandText{
      font-size:2.8vw;
    }
    vid {
      width: 100%;
    }
    .newVideo{
      width: 100%;
    }
  }
</style>
<div class="everything">
<div class="Anzeige">
<div class="video" id="videoPlayer">
<video autoplay="autoplay" controlslist="nodownload" height="100%" loop="loop"> </video>
</div>

<div class="konto">
<div class="output">
<div>
<p class="KontoStandText">Aktueller Kontostand:</p>

<div>
<div id="kontostandneu"> </div>
</div>
</div>

<div>
<p class="KontoStandText">Gewinn/Verlust der letzten Runde:</p>

<div>
<div id="BalanceAddition"> </div>
</div>
</div>
</div>

<div class="chartDivision" id="chartDivision">
<div class="chart" id="chart">
<div class="chartPaddingL"> </div>

<div class="column1"> </div>

<div class="column2">
<div class="positiveChartLabel"><img alt="+" class="KontoLabel" id="positiveSign" /></div>

<div class="positiveChart" id="positiveChart"> </div>
</div>

<div class="column3"> </div>

<div class="column4">
<div class="negativeChartLabel"><img alt="-" class="KontoLabel" id="negativeSign" /></div>

<div class="negativeChart" id="negativeChart"> </div>
</div>

<div class="column5"> </div>

<div class="chartPaddingR"> </div>
</div>
</div>
</div>
</div>

<div>
<div class="container">
<div class="sectionsForButtons">
<div class="left-section">
<div class="divisionsForRiskGroup">
<div class="division-inner"><button class="btn btn-light" disabled="disabled" type="button"><span class="button-text">1000€</span></button></div>
</div>

<div class="divisionsForRiskGroup">
<div class="division-inner"><button class="btn btn-light" disabled="disabled" type="button"><span class="button-text">500€</span></button></div>
</div>

<div class="divisionsForRiskGroup">
<div class="division-inner"><button class="btn btn-light" disabled="disabled" type="button"><span class="button-text">200€</span></button></div>
</div>

<div class="divisionsForRiskGroup">
<div class="division-inner"><button class="btn btn-light" disabled="disabled" type="button"><span class="button-text">100€</span></button></div>
</div>
</div>

<div class="right-section" style="text-align: center;">
<div class="divisionsForRiskGroup">
<div class="division-inner"><button class="btn btn-success" id="Dice_1" onclick="updateLastButton('Dice_1', 1000, [1]);" style="margin: 1% 2% 1% 2%;" type="button"><img alt="ImageTest1" /></button><button class="btn btn-success" id="Dice_2" onclick="updateLastButton('Dice_2', 1000, [2]);" style="margin: 1% 2% 1% 2%;" type="button"><img alt="ImageTest1" /></button><button class="btn btn-success" id="Dice_3" onclick="updateLastButton('Dice_3', 1000, [3]);" type="button"><img alt="ImageTest1" /></button><button class="btn btn-success" id="Dice_4" onclick="updateLastButton('Dice_4', 1000, [4]);" type="button"><img alt="ImageTest1" /></button><button class="btn btn-success" id="Dice_5" onclick="updateLastButton('Dice_5', 1000, [5]);" type="button"><img alt="ImageTest1" /></button><button class="btn btn-success" id="Dice_6" onclick="updateLastButton('Dice_6', 1000, [6]);" type="button"><img alt="ImageTest1" /></button></div>
</div>

<div class="divisionsForRiskGroup">
<div class="division-inner"><button class="btn btn-success" id="Dice_12" onclick="updateLastButton('Dice_12', 500, [1,2]);" style="margin: 1% 3.3% 1% 3.3%;" type="button"><img alt="ImageTest1" /></button><button class="btn btn-success" id="Dice_34" onclick="updateLastButton('Dice_34', 500, [3,4]);" style="margin: 1% 3.3% 1% 3.3%;" type="button"><img alt="ImageTest1" /></button><button class="btn btn-success" id="Dice_56" onclick="updateLastButton('Dice_56', 500, [5,6]);" style="margin: 1% 3.3% 1% 3.3%;" type="button"><img alt="ImageTest1" /></button></div>
</div>

<div class="divisionsForRiskGroup">
<div class="division-inner"><button class="btn btn-success" id="Dice_123" onclick="updateLastButton('Dice_123', 200, [1,2,3]);" style="margin: 1% 5% 1% 5%;" type="button"><img alt="ImageTest1" /></button><button class="btn btn-success" id="Dice_456" onclick="updateLastButton('Dice_456', 200, [4,5,6]);" style="margin: 1% 5% 1% 5%;" type="button"><img alt="ImageTest1" /></button></div>
</div>

<div class="divisionsForRiskGroup">
<div class="division-inner"><button class="btn btn-success" id="Dice_1234" onclick="updateLastButton('Dice_1234', 100, [1,2,3,4]);" type="button"><img alt="ImageTest1" /></button><button class="btn btn-success" id="Dice_2345" onclick="updateLastButton('Dice_2345', 100, [2,3,4,5]);" type="button"><img alt="ImageTest1" /></button><button class="btn btn-success" id="Dice_3456" onclick="updateLastButton('Dice_3456', 100, [3,4,5,6]);" type="button"><img alt="ImageTest1" /></button></div>
</div>
</div>
</div>
</div>
</div>
</div>
<script type="text/javascript">
  //Die Kommentare wechseln oft zwischen englisch und deutsch, da während des programmieren meist ohne zu denken auf englisch kommentiert wird und Kommentare, die im Nachhinein hinzugefügt werden meist auf Deutsch sind.
  //
  //
  var kontostand = parseInt(sessionStorage.getItem('kontostand'), 10);
  var BalanceAddition = parseInt(sessionStorage.getItem('BalanceAddition'), 10) || 0;
  
  var kontostandneu = kontostand + BalanceAddition;  
  sessionStorage.setItem('kontostand', kontostandneu);
  
  document.getElementById("kontostandneu").innerText = kontostandneu + "€";
  
  //Aktualisiert die Kontostand-Anzeige
  function BalanceUpdate()
  {
    kontostand = parseInt(sessionStorage.getItem('kontostand'), 10);
    BalanceAddition = parseInt(sessionStorage.getItem('BalanceAddition'), 10) || 0;
  
    kontostandneu = kontostand + BalanceAddition;  
    sessionStorage.setItem('kontostand', kontostandneu);
    //Speichert KontostandproRunde für die Datenauswertung
    SaveCurrentBalance(kontostandneu);
    SetFinalBalance();
    updateChart();
    //Je nach Kontostand andere Textfarbe
    document.getElementById("kontostandneu").innerText = kontostandneu + "€";
    if(kontostandneu > 0)
    {
    	document.getElementById("kontostandneu").style.color = "lawngreen";
    } 
    else if (kontostandneu < 0)
    {
    	document.getElementById("kontostandneu").style.color = "red";
    } 
    else
    {
    	document.getElementById("kontostandneu").style.color = "white";
    }
  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  //Aktualisiert die Gewinn/Verlust Anzeige
  function updateBalanceAddition()
  {
    var BalanceAddition = parseInt(sessionStorage.getItem('BalanceAddition'), 10) || 0;
  	if(BalanceAddition != 0)
    {
      SaveCurrentBalanceAddition(BalanceAddition);
    }
    //Bei Gewinn oder Verlust andere Farbe
  	document.getElementById("BalanceAddition").innerText = BalanceAddition + "€";
  	if(BalanceAddition > 0)
    {
    	document.getElementById("BalanceAddition").style.color = "lawngreen";
  	} 
    else if (BalanceAddition < 0)
    {
    	document.getElementById("BalanceAddition").style.color = "red";
  	}

  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  

  $(document).ready(function() {
    updateBalanceAddition();
  });

  //Macht ein neues Video Element mit einer neuen source um das alte zu ersetzen
  function createStyledVideo(src) 
  {
  	var video = document.createElement('video');
  	video.src = src;
    video.className = "NewVideo";
    video.style.width = "100%";
	video.style.height = "100%";
    video.style.maxWidth = "100%";
  	return video;
  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  //Ändert das Ergebnisvideo zum Würfelvideo
  function ChangeVideoToDice()
  {
    //Just replacing the source didnt work, therefore im replacing the player
    var videoPlayerId = document.getElementById("videoPlayer");
    var shakeVideoPlayer = createStyledVideo("\\upload\\surveys\\"+'{SID}'+"\\files\\wuerfelvideo.mp4");

    shakeVideoPlayer.autoplay = true;
    shakeVideoPlayer.loop = true;
    shakeVideoPlayer.controlslist = 'nodownload';

    videoPlayerId.innerHTML = '';
    videoPlayerId.appendChild(shakeVideoPlayer);

  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  //Ändert das Würfelvideo zum Ergebnisvideo  
  function ChangeVideoToResult()
  {
    //Just replacing the source didnt work, therefore im again replacing the player
    var videoPlayerId = document.getElementById("videoPlayer");
    var resultVideoPlayer = createStyledVideo(GetVideoPath());
    
    resultVideoPlayer.autoplay = true;
    resultVideoPlayer.loop = false;
    resultVideoPlayer.controlslist = 'nodownload';
    resultVideoPlayer.onplay = PlayWinAudio;

   resultVideoPlayer.addEventListener('ended', VideoEnded);
   videoPlayerId.innerHTML = '';
   videoPlayerId.appendChild(resultVideoPlayer);
EvaluateChoice();
  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  //3000 millisekunden nachdem das Video fertig ist, wird die nächste Runde eingeleitet
  function VideoEnded()
  {

  	var delayInMilliseconds = 3000;
  	setTimeout(function () {
			ChangeVideoToDice();
    	StartNextRound();

    }, delayInMilliseconds);
  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

</script><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><script src="https://code.jquery.com/jquery-3.6.4.min.js"></script><script>
  //
  //Disabled die Buttons, sodass für die Runde kein weitere Input getätigt werden kann.
  function disableAllButtons() 
  {
        var rightSectionButtons = document.querySelectorAll('.btn-success');
        for (var i = 0; i < rightSectionButtons.length; i++)
        {
            rightSectionButtons[i].disabled = true;
        }
  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  //Aktiviert die Buttons wieder
  function reEnableAllButtons()
  {
        var rightSectionButtons = document.querySelectorAll('.btn-success');
        for (var i = 0; i < rightSectionButtons.length; i++)
        {
            rightSectionButtons[i].disabled = false;
        }
  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  // Function that is referenced by the buttons to update the "last_button" variable with the individual ButtonID
  function updateLastButton(buttonId, Bet, ChosenNumbers)
  {

        sessionStorage.setItem('last_button', buttonId);
        sessionStorage.setItem('bet', Bet);
        sessionStorage.setItem('chosenNumbers', ChosenNumbers);
        //trigger function in the Next few hidden Question that inputs the variable in the text field and more
    	AddRiskCounter();
        SaveButtonChoice();
        SaveBetChoice();
        SaveChosenNumberChoice();
        disableAllButtons();
        ChangeVideoToResult();
    	SaveCurrentDiceResult();

  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  //Aktualisiert das Balkendiagramm
  function updateChart()
  {
    var Kontostand = parseInt(sessionStorage.getItem('kontostand'), 10);
    var tausender = Math.floor(Kontostand / 1000); //1300 wird zu 1; 500 wird zu 0; etc
    var hunderter = Math.floor((Kontostand - (tausender * 1000))/100); //1700 wird zu 7; 3900 wird zu 9;
	resetChartStyles();
    
     //Sets the Index of the thousands for the stylization of the chart divisions based on the balance
    var positiveTChartIndex = Math.max(0, tausender);
    var negativeTChartIndex = Math.max(0, -tausender);
    
    //für Hunderter
    var positiveBalance = true;
    if(Kontostand < 0)
      {
        positiveBalance = false;
      }
    else
      {
        positiveBalance = true;
      }
    
    // Applies styles to the positive chart
    for (var i = 0; i <= positiveTChartIndex; i++) 
    {
      	var pDivision = document.getElementById('pChart_' + i);
      
        if(i != positiveTChartIndex)
        {
          	
           		pDivision.style.backgroundColor = 'lawngreen';
        	          
    	}
    	else if(positiveBalance == true && hunderter != 0)
        {
        	
              for(var j = 0; j <= hunderter; j++)
              {
                var temp = j*100;
                var hDiv = document.getElementById(i+'+'+temp+"€");
                hDiv.style.backgroundColor = 'lawngreen';
              }
            
         }
      }

    // Applies styles to the negative chart 
    for (var i = 0; i < negativeTChartIndex; i++) 
    {
      	var nDivision = document.getElementById('nChart_' + i);
      	if(i != ((negativeTChartIndex ) ))
        {
          	
           		nDivision.style.backgroundColor = 'red';
        	
        }
     	else if(positiveBalance == false && hunderter != 0)
        {
        	
              for(var j = 0; j <= (10-hunderter); j++)
              {
                var temp = j*100;
                var hDiv = document.getElementById(i+'-'+temp+"€");
                hDiv.style.backgroundColor = 'red';
              }
        
      }
    }
  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  $(document).ready(function() { updateChart(); })

  //Setzt roten/grünen Balken im Balkendiagramm auf transparent
  function resetChartStyles() 
  {
    	var chartDivisions = document.querySelectorAll('.positiveChart > div, .negativeChart > div');
    	chartDivisions.forEach(function (division) 
                               {
        							division.style.backgroundColor = 'transparent';
      								var hunderterDivs = division.querySelectorAll('div');
        							hunderterDivs.forEach(function (hunderterDiv) 
                                                          {
            												hunderterDiv.style.backgroundColor = 'transparent';
       													  });
    							});
  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    </script>
<style type="text/css">body {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin: 0;
  max-width:100%;
        }
  /*
   * Container für die Würfel */
  .container {
            display: flex;
    		flex-wrap: nowrap;
    		flex-direction: row;
            justify-content: space-between;
            align-items: center;
    		max-width: 100%; /* Set max-width to prevent horizontal overflow */
        }
  /*
   * Diese Box ist in 2 Spalten aufgeteilt. Im linken sind die Risikobezeichnung, im rechten sind die Würfel */
  .sectionsForButtons {
            display: grid;
    		grid-template-columns: 1fr 9fr;
   			gap:0.5vw;
    		height: fit-content;
            width: fit-content;
            margin: auto;
        }
  /*
   * Box für Text mit dem Wetteinsatz der Würfelmöglichkeiten */
  .divisionsForRiskGroup {
            flex: 1;
            margin: 1vw;
            display: flex;
    		flex-wrap: nowrap;
            align-items: center;
            justify-content: space-evenly;
    		max-height: 3vw;
            max-width: 100%;
    		
 }
  /*
   *  Divison innerhalb der Reihen */
  .division-inner {
   display: flex;
   flex-wrap: nowrap;
    justify-content: space-evenly;
    align-items: center;
    width: 100%;
    max-height: 3vw;
    gap: .5vw;
    
        }
   /*
    * Button Innerhalb division Inner */
  .division-inner button {
    max-height: 100%;
    width: auto;
    max-width: 100%;
    height: auto;
    margin: 1vw;
    padding: 0.5vw;
    display: flex;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
     
    }
  /*
   * Bild Innerhalb division Inner */
  .division-inner img {
      	    max-height: 2vw;
      		max-width: 100%
            width: 100%;
      		height:auto;
      		width: auto;
            object-fit: cover;

 
        }
  /*
   * Links sind die buttons disabled, da dort nur der Wetteinsatz angezeigt wird. Es ist als ""Button"" damit die größe identisch zu den Würfeln ist. */
  .left-section button:disabled {
    cursor: default;
    color: inherit;
    background-color: transparent;
    padding: .5vw
    margin: 1vw;
}
  /*
   * Text mit den Wetteinsätzen */
  .left-section button:disabled .button-text {
    font-weight: bold;
    max-width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    white-space: nowrap;
    font-size: 1vw; 
    color: black; 
}
  
  .left-section button:disabled span {
    font-weight: bold;
    color: black;
    max-width: 100%; 
    white-space: nowrap; 
    
}


  /* 
   * Linke Spalte, die die Wetteinsätze anzeigt*/
  .left-section {
            display: flex;
            flex-direction: column;
          gap: .5vw;
          flex: 1;
           max-width: 3vw;
          width: fit-content;
         flex-wrap: nowrap;
 }
/*
 * Rechte Spalte, die die Würfel beinhaltet */
.right-section {
          display: flex;
          flex-direction: column;
          gap: .5vw;
          flex: 1;
          width: fit-content;
          max-width: 100vw;
          flex-wrap: nowrap;


        }
  /*
   * Wenn die Buttons disabled sind, sollen diese trotzdem visuell sich nicht ändern */
.right-section .divisionsForRiskGroup .division-inner .btn-success:disabled {
    cursor: pointer; /* Add pointer cursor for consistency */
    color: inherit;
  opacity: 1;
    background-color: #328637;
    padding: .5vw;
    margin: 1vw;
    pointer-events: auto; /* Enable pointer events on disabled buttons */
}

.right-section .divisionsForRiskGroup .division-inner .btn-success .button-text {
    font-weight: bold;
    max-width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    white-space: nowrap;
    font-size: 1vw; 
    color: black; 
}
.right-section .divisionsForRiskGroup .division-inner .btn-success span {
    font-weight: bold;
    color: black;
    max-width: 100%; 
    white-space: nowrap; 
}

/*
 * Spezifische Änderungen für eine mobile Ansicht */
@media only screen and (max-width: 600px) {
.sectionsForButtons {
  grid-template-columns: 1fr 6fr;
  }
.right-Section{
  }
  .left-section {
    max-width: 10vw;
  }
.division-inner img {
  max-height: 5vw;
  }
  .divisionsForRiskGroup {
  max-height: 8vw;
  }
  .division-inner {
      max-height: 8vw;
  }
  .right-section {
    max-width: 80vw;
  }
  .left-section button:disabled .button-text{
    font-size: 3vw;
  }
}
</style>
<script>
  var btnSuccessElements = document.querySelectorAll('.btn-success');
  var btnSuccessArray = Array.from(btnSuccessElements);
  
  //Da die Bilder in den Survey-Ressourcen sind und somit der File-Path sich je nach "Umfragen-ID" ändern kann, muss der Path via Script assigned werden
  function SetButtonImages()
  {
	btnSuccessArray.forEach(function(element) {
    	var Path =  "\\upload\\surveys\\"+'{SID}'+"\\files\\"+ element.id +".png"
    	var imgElement = element.querySelector('img');
    	if (imgElement) 
    	{
    	  imgElement.src = Path;
    	}
	});
  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  

  var nChartImage = document.getElementById('negativeSign');
  nChartImage.src = "\\upload\\surveys\\"+'{SID}'+"\\files\\kontoMinus.png";
  var pChartImage = document.getElementById('positiveSign');
  pChartImage.src = "\\upload\\surveys\\"+'{SID}'+"\\files\\kontoPlus.png";
  
  
  var maxRunden = parseInt(sessionStorage.getItem('Rundenanzahl'));
  var positiveChartContainer = document.getElementById('positiveChart');
  var negativeChartContainer = document.getElementById('negativeChart');

  //Im Balkendiagramm werden in der 2. und 4. Spalte der Box die Balken angezeigt. Dort gibt es oben das Label Bild. Unten wird hier nun für jede Runde(+1) eine Division erstellt. Runde+1, da man mit 1000€ beginnt.
  //Wenn man nun jedes mal gewinnt ist der maximal möglichste Kontostand (Rundenanzahl)*1000 + 1000.
  //Also gibt es nun RundenAnzahl+1 divisionen (und eine zusatzdivision als padding)
  //Jede diese Divisionen repräsentiert 1000€ (Also wenn die unterste Division ausgefüllt ist, steht es für 1000€)
  //In jeder Division werden 10 neue divisionen generiert, welche die 100€ Schritte repräsentieren.
  //Somit kann man nun einen Kontostand anzeigen, indem man die dementsprechende Division füllt
  for(var i = (maxRunden+1); i > 0;i--)
  {
    //Positive Balken
    var pDivision = document.createElement('div');
    pDivision.setAttribute('id','pChart_' +(i-1));
    pDivision.className = 'pChart_' +(i-1);
    positiveChartContainer.appendChild(pDivision)
    var height = ((1/maxRunden)*100) + "%"
	pDivision.style.height = height;
    for(var j = 10; j>0; j--)
      {
        var pHunderterDiv = document.createElement('div');
        mClassName = 100* (j-1);
        pHunderterDiv.setAttribute('id',(i-1)+'+'+mClassName+'€');
        pHunderterDiv.className = '+'+mClassName+'€';
        pDivision.appendChild(pHunderterDiv);
        pHunderterDiv.style.height = "10%";
        
      }
    //Negative Balken
    var nDivision = document.createElement('div');
    nDivision.setAttribute('id','nChart_' +(i-1));
    nDivision.className = 'nChart_' +(i-1);
    negativeChartContainer.appendChild(nDivision)
    nDivision.style.height = height;
    for(var j = 10; j>0; j--)
      {
        var nHunderterDiv = document.createElement('div');
        mClassName = 100* (j-1);
        nHunderterDiv.setAttribute('id',(i-1)+'-'+mClassName+'€');
        nHunderterDiv.className = '-'+mClassName+'€';
        nDivision.appendChild(nHunderterDiv);
        nHunderterDiv.style.height = "10%";
        
      }
  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //

  //Sobald die Fenstergröße verändert wird, wird das Balkendiagramm auf die selbe Größe wie das Video gesetzt, damit das Layout schön aussieht.
  function resizeChart()
  {
  			// Get the Video Player to base chart on its height
            var videoPlayer = document.getElementById("videoPlayer").querySelector('video');

            // Get the computed style of the Video Player
            var computedStyle = window.getComputedStyle(videoPlayer);

            // Get the width in px from the Video Player
            var width = computedStyle.getPropertyValue("width");
    		//Calculate the height based on aspect ratio (16:9);
    		var height = (width/1.77);
    		//This is the element that height we want to change
    		var chartElement = document.getElementById("chartDivision");
    
    		chartElement.style.height = height;
  }
  
  document.addEventListener('DOMContentLoaded', function ()
                            {
  								//When the page loads
  								resizeChart();  
  								//EventListeneer for everytime the window size changes
  								window.addEventListener('resize', resizeChart);
							});
  //Sobald die Seite geladen wurde, werden die Bilder gesetzt
  $(document).ready(function() { SetButtonImages(); })
</script>]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[2]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30048]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[T]]></type>
    <title><![CDATA[SoundFeld]]></title>
    <question><![CDATA[<audio controls="" id="audioPlayerRight"> </audio>

<audio controls="" id="audioPlayerWrong"> </audio>
<script>

  var audioPlayerRight = document.getElementById("audioPlayerRight");
  var audioPlayerWrong = document.getElementById("audioPlayerWrong");
  audioPlayerRight.src = "\\upload\\surveys\\"+'{SID}'+"\\files\\Correct.wav";
  audioPlayerWrong.src = "\\upload\\surveys\\"+'{SID}'+"\\files\\False.wav";
  
  //Spielt die Audiodatei ab
  function PlayWinAudio()
  {
    var temp = sessionStorage.getItem('Gewonnen?');
    if(temp == "true")
      {
            audioPlayerRight.play();

      }
    else
      {
        audioPlayerWrong.play();

      }
  } 
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
   var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
</script>]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[3]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30049]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[S]]></type>
    <title><![CDATA[ButtonChoiceProRunde]]></title>
    <question><![CDATA[<meta charset="UTF-8"><meta name="viewport2" content="width=device-width, initial-scale=1.0"><script>
  //function that is called in the other question on every Dice Click and inputs the local variable
  function SaveButtonChoice()
  {
    //The next two values are to get the answer field we want to Input the variable we want to save for the data set
    var this_self='{self.sgqa}';
	var my_targetTextBox='#answer' + this_self;
    
    var tempProRunde = JSON.parse(sessionStorage.getItem('ButtonAuswahlProRunde'));
    tempProRunde.push(sessionStorage.getItem('last_button'));
    sessionStorage.setItem('ButtonAuswahlProRunde',JSON.stringify(tempProRunde));
    $(my_targetTextBox).val(sessionStorage.getItem('ButtonAuswahlProRunde'));
  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    </script>
<p>Würfelauswahl</p>
]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[4]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30050]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[S]]></type>
    <title><![CDATA[WetteinsatzProRunde]]></title>
    <question><![CDATA[<meta charset="UTF-8"><meta name="viewport2" content="width=device-width, initial-scale=1.0"><script>
  
  //function that is called in the other question on every Dice Click and inputs the local variable
  function SaveBetChoice()
  {
    //The next two values are to get the answer field we want to Input the variable we want to save for the data set
    var this_self='{self.sgqa}';
	var my_targetTextBox='#answer' + this_self;
    var tempProRunde = JSON.parse(sessionStorage.getItem('RisikoAuswahlProRunde'));
    tempProRunde.push(sessionStorage.getItem('bet'));
    sessionStorage.setItem('RisikoAuswahlProRunde',JSON.stringify(tempProRunde));
    $(my_targetTextBox).val(sessionStorage.getItem('RisikoAuswahlProRunde'));
  }
  //^^^^^^^^^^^^^^^^^^^^^^
  //
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    </script>
<p>Wetteinsatz</p>
]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[5]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30051]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[S]]></type>
    <title><![CDATA[ChosenNumberProRunde]]></title>
    <question><![CDATA[<meta charset="UTF-8"><meta name="viewport2" content="width=device-width, initial-scale=1.0"><script>

  //function that is called in the other question on every Dice Click and inputs the local variable
  function SaveChosenNumberChoice()
  {
    //The next two values are to get the answer field we want to Input the variable we want to save for 	the data set
	var this_self='{self.sgqa}';
	var my_targetTextBox='#answer' + this_self;
    var tempProRunde = JSON.parse(sessionStorage.getItem('GesetzteNummernProRunde'));
    tempProRunde.push(sessionStorage.getItem('chosenNumbers'));
    sessionStorage.setItem('GesetzteNummernProRunde', JSON.stringify(tempProRunde));
    $(my_targetTextBox).val(sessionStorage.getItem('GesetzteNummernProRunde'));
  }  
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    </script>
<p>Gewählte Zahlen</p>
]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[6]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30052]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[S]]></type>
    <title><![CDATA[EvaluationProRunde]]></title>
    <question><![CDATA[<script>
  var WhatToAddToTheScore = parseInt(0, 10);
  //
  //Hier wird evaluiert, ob die gewählte Auswahl gewonnen oder Verloren hat
  function EvaluateChoice()
  {
    WhatToAddToTheScore = parseInt(0, 10);
    var WinningNumber = GetResult();
    var ChosenNumbers = sessionStorage.getItem('chosenNumbers');
	var bet = parseInt(sessionStorage.getItem('bet'),10);
    
    var this_self='{self.sgqa}';
    var my_targetTextBox='#answer' + this_self;
    var tempProRunde = JSON.parse(sessionStorage.getItem('ResultatProRunde'));
    
    if(ChosenNumbers.includes(WinningNumber))
      {
        WhatToAddToTheScore = WhatToAddToTheScore+bet;
        tempProRunde.push("Win");
    	sessionStorage.setItem('ResultatProRunde',JSON.stringify(tempProRunde));
        sessionStorage.setItem('Gewonnen?', true);
      }
    else
      {
        WhatToAddToTheScore = WhatToAddToTheScore-bet;
        tempProRunde.push("Loss");
    	sessionStorage.setItem('ResultatProRunde',JSON.stringify(tempProRunde));
        sessionStorage.setItem('Gewonnen?', false);
      }
    sessionStorage.setItem('BalanceAddition', WhatToAddToTheScore);

    $(my_targetTextBox).val(sessionStorage.getItem('ResultatProRunde'));
    
    //Die Kontoanzeigen sollen erst aktualisiert werden, wenn im video das ergebnis zu sehen ist
    setTimeout(function() 
               {
    				BalanceUpdate();
    			    updateBalanceAddition();
				}, 2000);
    
  }  
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
</script>]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[7]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30053]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[T]]></type>
    <title><![CDATA[KontostandProRunde]]></title>
    <question><![CDATA[<meta charset="UTF-8"><meta name="viewport2" content="width=device-width, initial-scale=1.0"><script>

  function SaveCurrentBalance(Balance)
  {
    //The next two values are to get the answer field we want to Input the variable we want to save for 	the data set
	var this_self='{self.sgqa}';
	var my_targetTextBox='#answer' + this_self;
    var tempProRunde = JSON.parse(sessionStorage.getItem('KontostandProRunde'));
    tempProRunde.push(Balance);
    sessionStorage.setItem('KontostandProRunde', JSON.stringify(tempProRunde));
    $(my_targetTextBox).val(sessionStorage.getItem('KontostandProRunde'));
  }  
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    </script>]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[8]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30054]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[S]]></type>
    <title><![CDATA[GewinnProRunde]]></title>
    <question><![CDATA[<meta charset="UTF-8"><meta name="viewport2" content="width=device-width, initial-scale=1.0"><script>

  function SaveCurrentBalanceAddition(BalanceAddition)
  {
    //The next two values are to get the answer field we want to Input the variable we want to save for the data set
	var this_self='{self.sgqa}';
	var my_targetTextBox='#answer' + this_self;
    var tempProRunde = JSON.parse(sessionStorage.getItem('BalanceAdditionProRunde'));
    tempProRunde.push(BalanceAddition);
    sessionStorage.setItem('BalanceAdditionProRunde', JSON.stringify(tempProRunde));
    $(my_targetTextBox).val(sessionStorage.getItem('BalanceAdditionProRunde'));
  }  
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    </script>]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[9]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30055]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[T]]></type>
    <title><![CDATA[Spielende]]></title>
    <question><![CDATA[<script>
  
//Simuliert einen Klick auf den "Weiter"-Button, damit der Teilnehmer zur nächsten Fragegruppe geleitet wird
function GoToNextQuestion()
  {
    $('#ls-button-submit').trigger('click');
  }
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  // Hier wird der "Weiter"-Button versteckt, damit der Teilnehmer nicht eigenständig das Spiel vorzeitig beenden kann
  $(document).ready(function() {
  $('#ls-button-submit').hide();
  });
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
</script>]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[10]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30056]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[S]]></type>
    <title><![CDATA[FinalerKontostand]]></title>
    <question><![CDATA[<meta charset="UTF-8"><meta name="viewport2" content="width=device-width, initial-scale=1.0"><script>
  var this_self='{self.sgqa}';
  var my_targetTextBox='#answer' + this_self;

  function SetFinalBalance()
  {
    var Balance = sessionStorage.getItem('kontostand');
    $(my_targetTextBox).val(Balance);
  }
  //^^^^^^^^^^^^^^^^^^^^^^
  //
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    </script>]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[11]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30057]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[S]]></type>
    <title><![CDATA[Anzahl1000]]></title>
    <question><![CDATA[<meta charset="UTF-8"><meta name="viewport2" content="width=device-width, initial-scale=1.0"><script>

  var Counter1000 = 0;
  
  //Ruft die AddXChoice für die nächsten 4 Fragen auf
  function AddRiskCounter()
  {
    var bet = parseInt(sessionStorage.getItem('bet'),10);
    if(bet == 1000)
      {
        Add1000Choice();
      }
    else if(bet == 500)
      {
        Add500Choice();
      }
    else if(bet == 200)
      {
        Add200Choice();
      }
    else if (bet == 100)
      {
        Add100Choice();
      }
  }
  
  //Zähler für wie oft Risikoklasse 1000€ gewählt wurde
  function Add1000Choice()
  {

    Counter1000 = Counter1000 +1;
    var this_self='{self.sgqa}';
    var my_targetTextBox='#answer' + this_self;
    $(my_targetTextBox).val(Counter1000);
    AddRiskChoice()
  }
  
  $(document).ready(function() {
    var this_self='{self.sgqa}';
    var my_targetTextBox='#answer' + this_self;
    $(my_targetTextBox).val(0);
	})
  //^^^^^^^^^^^^^^^^^^^^^^
  //
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    </script>
<p> </p>
]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[12]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30058]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[S]]></type>
    <title><![CDATA[Anzahl500]]></title>
    <question><![CDATA[<meta charset="UTF-8"><meta name="viewport2" content="width=device-width, initial-scale=1.0"><script>

  var Counter500 = 0;
  
  //Zähler für wie oft Risikoklasse 500€ gewählt wurde
  function Add500Choice()
  {
    Counter500 = Counter500 +1;
    var this_self='{self.sgqa}';
  	var my_targetTextBox='#answer' + this_self;
    $(my_targetTextBox).val(Counter500);
    AddRiskChoice()
  }
  //^^^^^^^^^^^^^^^^^^^^^^
  //
    $(document).ready(function() {
    var this_self='{self.sgqa}';
    var my_targetTextBox='#answer' + this_self;
    $(my_targetTextBox).val(0);
	})
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    </script>
<p> </p>
]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[13]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30059]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[S]]></type>
    <title><![CDATA[Anzahl200]]></title>
    <question><![CDATA[<meta charset="UTF-8"><meta name="viewport2" content="width=device-width, initial-scale=1.0"><script>

  var Counter200 = 0;
  
  //Zähler für wie oft Risikoklasse 200€ gewählt wurde
  function Add200Choice()
  {
    Counter200 = Counter200 +1;
    var this_self='{self.sgqa}';
    var my_targetTextBox='#answer' + this_self;
    $(my_targetTextBox).val(Counter200);
    AddNonRiskChoice();
  }
  //^^^^^^^^^^^^^^^^^^^^^^
  //
    $(document).ready(function() {
    var this_self='{self.sgqa}';
    var my_targetTextBox='#answer' + this_self;
    $(my_targetTextBox).val(0);
	})
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    </script>
<p> </p>
]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[14]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30060]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[S]]></type>
    <title><![CDATA[Anzahl100]]></title>
    <question><![CDATA[<meta charset="UTF-8"><meta name="viewport2" content="width=device-width, initial-scale=1.0"><script>

  var Counter100 = 0;
  
  //Zähler für wie oft Risikoklasse 100€ gewählt wurde
  function Add100Choice()
  {
    Counter100 = Counter100 +1;
    var this_self='{self.sgqa}';
  	var my_targetTextBox='#answer' + this_self;
    $(my_targetTextBox).val(Counter100);
    AddNonRiskChoice();
  }
  //^^^^^^^^^^^^^^^^^^^^^^
  //
    $(document).ready(function() {
    var this_self='{self.sgqa}';
    var my_targetTextBox='#answer' + this_self;
    $(my_targetTextBox).val(0);
	})
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    </script>
<p> </p>
]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[15]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30061]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[S]]></type>
    <title><![CDATA[AnzahlRiskant]]></title>
    <question><![CDATA[<meta charset="UTF-8"><meta name="viewport2" content="width=device-width, initial-scale=1.0"><script>

  var CounterR = 0;
  
  //Zähler für wie oft Risikoklasse 500€ oder 1000€ gewählt wurde
  function AddRiskChoice()
  {
    CounterR = CounterR +1;
    var this_self='{self.sgqa}';
  	var my_targetTextBox='#answer' + this_self;
    $(my_targetTextBox).val(CounterR);
    sessionStorage.setItem('RiskCounter', CounterR);
    AddNettoScore();
  }
  //^^^^^^^^^^^^^^^^^^^^^^
  //
    $(document).ready(function() {
    var this_self='{self.sgqa}';
    var my_targetTextBox='#answer' + this_self;
    $(my_targetTextBox).val(0);
	})
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    </script>
<p> </p>
]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[16]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30062]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[S]]></type>
    <title><![CDATA[AnzahlNichtRiskant]]></title>
    <question><![CDATA[<meta charset="UTF-8"><meta name="viewport2" content="width=device-width, initial-scale=1.0"><script>

  var CounterN = 0;
  
  //Zähler für wie oft Risikoklasse 100€ oder 200€ gewählt wurde
  function AddNonRiskChoice()
  {
    CounterN = CounterN +1;
    var this_self='{self.sgqa}';
    var my_targetTextBox='#answer' + this_self;
    $(my_targetTextBox).val(CounterN);
    sessionStorage.setItem('NonRiskCounter', CounterN);
    AddNettoScore();
  }
  //^^^^^^^^^^^^^^^^^^^^^^
  //
    $(document).ready(function() {
    var this_self='{self.sgqa}';
    var my_targetTextBox='#answer' + this_self;
    $(my_targetTextBox).val(0);
	})
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    </script>
<p> </p>
]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[17]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30063]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[S]]></type>
    <title><![CDATA[RisikoNettoScore]]></title>
    <question><![CDATA[<meta charset="UTF-8"><meta name="viewport2" content="width=device-width, initial-scale=1.0"><script>

  var NettoScore = 0;
  
  //NettoScore der risikoauswahlen. Nicht-Risiko - Risiko
  function AddNettoScore()
  {
    var this_self='{self.sgqa}';
    var my_targetTextBox='#answer' + this_self;
    var tempR = parseInt(sessionStorage.getItem('RiskCounter'),10);
    var tempN = parseInt(sessionStorage.getItem('NonRiskCounter'),10);
    NettoScore = tempN - tempR;
    $(my_targetTextBox).val(NettoScore);
  }
  //^^^^^^^^^^^^^^^^^^^^^^
  //
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    </script>
<p> </p>
]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[18]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30064]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[S]]></type>
    <title><![CDATA[Rundenanzahl]]></title>
    <question><![CDATA[<meta charset="UTF-8"><meta name="viewport2" content="width=device-width, initial-scale=1.0"><script>

  function SaveRoundCount()
  {
    //The next two values are to get the answer field we want to Input the variable we want to save for the data set
	var this_self='{self.sgqa}';
	var my_targetTextBox='#answer' + this_self;
    $(my_targetTextBox).val(sessionStorage.getItem('Rundenanzahl'));
  }  
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  $(document).ready(function() {
  SaveRoundCount();
	})
  //
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    </script>]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[19]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
   <row>
    <qid><![CDATA[30065]]></qid>
    <parent_qid><![CDATA[0]]></parent_qid>
    <sid><![CDATA[361194]]></sid>
    <gid><![CDATA[1911]]></gid>
    <type><![CDATA[S]]></type>
    <title><![CDATA[ErgebnisProRunde]]></title>
    <question><![CDATA[<meta charset="UTF-8"><meta name="viewport2" content="width=device-width, initial-scale=1.0"><script>
  var ResultArray = [];
  function SaveCurrentDiceResult()
  {
    //The next two values are to get the answer field we want to Input the variable we want to save for 	the data set
	var this_self='{self.sgqa}';
	var my_targetTextBox='#answer' + this_self;
    var Result = GetResult();

    ResultArray.push(Result);
    $(my_targetTextBox).val(JSON.stringify(ResultArray));
  }  
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  //
  // In den nächsten 4 Zeilen wird diese Frage ausgeblendet, da sie von den Teilnehmern nicht gesehen werden soll!
  var this_selfId={self.qid};
  var my_targetQuestion='question' + this_selfId;
  var questionElement = document.getElementById(my_targetQuestion);
  questionElement.style.display ="none";
  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    </script>]]></question>
    <preg/>
    <help/>
    <other><![CDATA[N]]></other>
    <mandatory><![CDATA[N]]></mandatory>
    <question_order><![CDATA[20]]></question_order>
    <language><![CDATA[de]]></language>
    <scale_id><![CDATA[0]]></scale_id>
    <same_default><![CDATA[0]]></same_default>
    <relevance><![CDATA[1]]></relevance>
    <modulename/>
   </row>
  </rows>
 </questions>
</document>
